#! /usr/bin/python3

ANSIBLE_METADATA = {
	'metadata+version': '1.1',
	'status': ['preview'],
	'supported_by': 'rzfeeser'
	}

DOCUMENTATION = '''
---
module: mymodule
short_description: This module is being designed so we can observe the minimum required config for an Ansible module. 
version_added = "2.8"
description:
    - this module is being designed so we can observe the minimum required config for an ansbile module
    - user passes a parameter called "name:" <str> <required>
    - user passes a parameter called "augment:" <bool> <required>
    - if argument: true 
    - if argument: false then ansible returns anme string and indicates


EXAMPLE = '''
- name: this would get a green okay

RETURN = '''
original_message:
    description: the param that was passed by the user
    type: str
message:
    description: the name parameter the same way it was passed or the new augmented name param
    type: str
'''

from ansible.module_utils.basic import AnsibleModule

def run_module():
    ## define the parameters that the use is allowed to pass in
    module_args = dict(
            name=dict(type='str', required=True),
            augment=dict(type='bool', default=False)
            )
    ## seed the return object
    result = dict(
            changed=False,
            original_message='',
            message=''
            )

    module = AnsibleModule(
            argument_spec=module_args,
            support_check_mode=True
            )

    if module.check_mode:
        return result

    result['original_message'] = module.params['name']

    if module.params['augment'] = False;
        result['message'] = module.params['name']
    else:
        result['message'] = module.params['name'] + " is a wild and crazy guy!!!  -- Dan Akroyd"

    if module.params['name'] = 'fail me':
        module.fail_json(msg="You requested this to fail", **result)

    module.exit_json(**result)

def main():
    run_module()

if _name_ == "_main_":
    main()





